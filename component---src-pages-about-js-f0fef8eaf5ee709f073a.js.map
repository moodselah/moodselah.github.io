{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/constants/meta.js","webpack:///./src/constants/enum.js","webpack:///./src/constants/index.js","webpack:///./src/constants/lang.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/head/index.jsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_utils_typography__WEBPACK_IMPORTED_MODULE_1__","_components_head__WEBPACK_IMPORTED_MODULE_2__","_constants__WEBPACK_IMPORTED_MODULE_3__","_ref","resume","data","allMarkdownRemark","edges","filter","_ref2","node","frontmatter","lang","Lang","map","_ref3","a","createElement","Fragment","title","style","marginLeft","marginRight","maxWidth","rhythm","padding","dangerouslySetInnerHTML","__html","html","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","CATEGORY_TYPE","ALL","THEME","LIGHT","DARK","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","GitHubTheme","overrideThemeStyles","boxShadow","textDecoration","color","a.gatsby-resp-image-link","a:hover","h1","fontWeight","lineHeight","fontFamily","h2","marginTop","marginBottom","ul","li","typography","Typography","scale","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Head","description","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAOeE,EAAA,iBAAAS,GAAc,IAGrBC,EAHqBD,EAAXE,KACKC,kBAAkBC,MAGpCC,OAAO,SAAAC,GAAA,OAAAA,EAAGC,KAAgBC,YAAYC,OAASC,MAC/CC,IAAI,SAAAC,GAAA,OAAAA,EAAGL,OAAiB,GAE3B,OACEZ,EAAAkB,EAAAC,cAAAnB,EAAAkB,EAAAE,SAAA,KACEpB,EAAAkB,EAAAC,cAAChB,EAAA,EAAD,CAAMkB,MAAM,WACZrB,EAAAkB,EAAAC,cAAA,OACEG,MAAO,CACLC,WAAU,OACVC,YAAW,OACXC,SAAUC,YAAO,IACjBC,QAAYD,YAAO,IAAZ,IAAoBA,YAAO,KAA3B,IAAqCA,YAAO,KAA5C,IAAoDA,YACzD,OAIJ1B,EAAAkB,EAAAC,cAAA,OAAKS,wBAAyB,CAAEC,OAAQvB,EAAOwB,WAMhD,IAAMhC,EAAS,+CCjCtBJ,EAAAG,EAAAD,EAAA,sBAAAmC,IAAA,IAAAhC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAiC,EAAAtC,EAAA,GAAAuC,EAAAvC,EAAAO,EAAA+B,GAAAE,EAAAxC,EAAA,IAAAyC,EAAAzC,EAAAO,EAAAiC,GAAAxC,EAAAG,EAAAD,EAAA,sBAAAuC,EAAAjB,IAAAxB,EAAA,SAYM0C,EAAqBC,IAAMC,cAAc,IAEzCP,EAAc,SAAAQ,GAAK,OACvBvC,EAAAkB,EAAAC,cAACiB,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAMhC,MACLkC,EAAgBF,EAAMG,QAAUD,EAAgBF,EAAMG,OAAOnC,MAEtDgC,EAAMI,QAAUJ,EAAMK,UAC5BL,EAAMhC,KAAOgC,EAAMhC,KAAKA,KAAOkC,EAAgBF,EAAMG,OAAOnC,MAGvDP,EAAAkB,EAAAC,cAAA,uCA4BfY,EAAYc,UAAY,CACtBtC,KAAMuC,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCAxC,ICAMK,EAAgB,CAC3BC,IAAK,OAGMC,EAAQ,CACnBC,MAAO,QACPC,KAAM,QCNRlE,EAAAG,EAAAD,EAAA,qBFA0B,SEA1BF,EAAAG,EAAAD,EAAA,sBAAA4D,IAAA9D,EAAAG,EAAAD,EAAA,sBAAA8D,IAAAhE,EAAAG,EAAAD,EAAA,qBCAsB,yCCAtBF,EAAAG,EAAAD,EAAA,sBAAA8B,IAAA,IAAAmC,EAAAnE,EAAA,KAAAoE,EAAApE,EAAAO,EAAA4D,GAAAE,EAAArE,EAAA,KAAAsE,EAAAtE,EAAAO,EAAA8D,GAGAE,IAAYC,oBAAsB,WAChC,MAAO,CACLhD,EAAG,CACDiD,UAAS,OACTC,eAAc,OACdC,MAAK,WAEPC,2BAA4B,CAC1BH,UAAS,OACTC,eAAc,QAGhBG,UAAW,CACTH,eAAc,QAGhBI,GAAI,CACFC,WAAY,IACZC,WAAY,IACZC,WAAY,aAGdC,GAAI,CACFH,WAAY,IACZC,WAAY,IACZG,UAAW,OACXC,aAAc,OACdH,WAAY,aAGdI,GAAI,CACFD,aAAc,OAGhBE,GAAI,CACFF,aAAc,SAKpB,IAAMG,EAAa,IAAIC,IAAWjB,KAOnBgB,IACFvD,EAASuD,EAAWvD,OACZuD,EAAWE,wGC9C1BC,EAAmB,SAAA/E,GAAkB,IAAfgF,EAAehF,EAAfgF,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOpD,IAAMlB,cAAcuE,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBvC,UAAY,CAC3BwC,SAAUvC,IAAUgD,MAAM,CACxBL,SAAU3C,IAAUE,OAAOC,aAC1BA,YAGUmC,sJChBR,SAASW,EAAT1F,GAA4D,IAA5C2F,EAA4C3F,EAA5C2F,YAAalF,EAA+BT,EAA/BS,KAAMmF,EAAyB5F,EAAzB4F,KAAMC,EAAmB7F,EAAnB6F,SAAU7E,EAAShB,EAATgB,MACxD,OACE8E,EAAAjF,EAAAC,cAACiF,EAAA,EAAD,CACE1D,MAAO2D,EACP1D,OAAQ,SAAApC,GACN,IAAM+F,EACJN,GAAezF,EAAKgG,KAAKC,aAAaR,YACxC,OACEG,EAAAjF,EAAAC,cAACsF,EAAAvF,EAAD,CACEwF,eAAgB,CACd5F,QAEFO,MAAOA,EACPsF,cAAa,QAAUpG,EAAKgG,KAAKC,aAAanF,MAC9C4E,KAAM,CACJ,CACEW,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASxF,GAEX,CACEyF,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAStG,EAAKgG,KAAKC,aAAaO,QAElC,CACEH,KAAI,gBACJC,QAASxF,GAEX,CACEuF,KAAI,sBACJC,QAASP,IAGVU,OACCd,EAASe,OAAS,EACd,CACEL,KAAI,WACJC,QAASX,EAASgB,KAAT,OAEX,IAELF,OAAOf,MAtDlB1F,KAAA4G,IA8DJpB,EAAKqB,aAAe,CAClBtG,KAAI,KACJmF,KAAM,GACNC,SAAU,IAGZH,EAAKlD,UAAY,CACfmD,YAAalD,IAAUE,OACvBlC,KAAMgC,IAAUE,OAChBiD,KAAMnD,IAAUuE,MAChBnB,SAAUpD,IAAUwE,QAAQxE,IAAUE,QACtC3B,MAAOyB,IAAUE,OAAOC,YAG1B,IAAMoD,EAAY","file":"component---src-pages-about-js-f0fef8eaf5ee709f073a.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\nimport { Head } from '../components/head'\nimport * as Lang from '../constants'\n\nexport default ({ data }) => {\n  const resumes = data.allMarkdownRemark.edges\n\n  const resume = resumes\n    .filter(({ node }) => node.frontmatter.lang === Lang.KOREAN)\n    .map(({ node }) => node)[0]\n\n  return (\n    <>\n      <Head title=\"Resume\" />\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(30),\n          padding: `${rhythm(0.5)} ${rhythm(3 / 4)} ${rhythm(1.5)} ${rhythm(\n            3 / 4\n          )}`,\n        }}\n      >\n        <div dangerouslySetInnerHTML={{ __html: resume.html }} />\n      </div>\n    </>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(filter: { frontmatter: { category: { eq: null } } }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 160)\n          html\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            lang\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","export const HOME_TITLE = 'Home'\n","export const CATEGORY_TYPE = {\n  ALL: 'All',\n}\n\nexport const THEME = {\n  LIGHT: 'light',\n  DARK: 'dark',\n}\n","export * from './meta'\nexport * from './window'\nexport * from './enum'\nexport * from './lang'\n","export const KOREAN = 'ko'\nexport const ENGLISH = 'en'\n","import Typography from 'typography'\nimport GitHubTheme from 'typography-theme-github'\n\nGitHubTheme.overrideThemeStyles = () => {\n  return {\n    a: {\n      boxShadow: `none`,\n      textDecoration: `none`,\n      color: `#0687f0`,\n    },\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n      textDecoration: `none`,\n    },\n\n    'a:hover': {\n      textDecoration: `none`,\n    },\n\n    h1: {\n      fontWeight: 800,\n      lineHeight: 1.2,\n      fontFamily: 'Catamaran',\n    },\n\n    h2: {\n      fontWeight: 700,\n      lineHeight: 1.2,\n      marginTop: '56px',\n      marginBottom: '20px',\n      fontFamily: 'Catamaran',\n    },\n\n    ul: {\n      marginBottom: '6px',\n    },\n\n    li: {\n      marginBottom: '2px',\n    },\n  }\n}\n\nconst typography = new Typography(GitHubTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nexport function Head({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nHead.defaultProps = {\n  lang: `ko`,\n  meta: [],\n  keywords: [],\n}\n\nHead.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}